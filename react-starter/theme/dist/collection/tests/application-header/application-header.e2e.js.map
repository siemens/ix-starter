{"version":3,"file":"application-header.e2e.js","sourceRoot":"","sources":["../../../src/tests/application-header/application-header.e2e.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExD,cAAc,CAAC,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACxD,cAAc,CAAC,oCAAoC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACtE,MAAM,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QAC5C,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,cAAc,CACZ,0CAA0C,EAC1C,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACjB,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QAChD,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CACF,CAAC;IAEF,cAAc,CAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAClD,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAC/C,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,cAAc,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACvD,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAC/C,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,cAAc,CACZ,0CAA0C,EAC1C,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACjB,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAE/C,MAAM,WAAW,GAAG,IAAI;aACrB,OAAO,CAAC,uBAAuB,CAAC;aAChC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAElC,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,WAAW,CAAC,KAAK,EAAE,CAAC;QAE1B,MAAM,QAAQ,GAAG,IAAI;aAClB,OAAO,CAAC,uBAAuB,CAAC;aAChC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAEvC,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CACF,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { expect } from '@playwright/test';\nimport { regressionTest, viewPorts } from '@utils/test';\n\nregressionTest.describe('application header: basic', () => {\n  regressionTest('should not have visual regressions', async ({ page }) => {\n    await page.goto('application-header/basic');\n    await expect(page).toHaveScreenshot();\n  });\n\n  regressionTest(\n    'should not have visual regressions - svg',\n    async ({ page }) => {\n      await page.goto('application-header/basic-svg');\n      await expect(page).toHaveScreenshot();\n    }\n  );\n\n  regressionTest('should content', async ({ page }) => {\n    await page.setViewportSize(viewPorts.lg);\n    await page.goto('application-header/overflow');\n    await expect(page).toHaveScreenshot();\n  });\n\n  regressionTest('should content - sm', async ({ page }) => {\n    await page.setViewportSize(viewPorts.sm);\n    await page.goto('application-header/overflow');\n    await expect(page).toHaveScreenshot();\n  });\n\n  regressionTest(\n    'should content - sm - click context menu',\n    async ({ page }) => {\n      await page.setViewportSize(viewPorts.sm);\n      await page.goto('application-header/overflow');\n\n      const contextMenu = page\n        .locator('ix-application-header')\n        .locator('[data-context-menu]');\n\n      await expect(contextMenu).toBeVisible();\n      await contextMenu.click();\n\n      const dropdown = page\n        .locator('ix-application-header')\n        .locator('[data-overflow-dropdown]');\n\n      await expect(dropdown).toBeVisible();\n      await expect(page).toHaveScreenshot();\n    }\n  );\n});\n"]}