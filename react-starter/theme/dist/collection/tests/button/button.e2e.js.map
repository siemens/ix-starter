{"version":3,"file":"button.e2e.js","sourceRoot":"","sources":["../../../src/tests/button/button.e2e.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAE7C,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC5C,cAAc,CAAC,6BAA6B,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAC/D,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,cAAc,CAAC,oCAAoC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACtE,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAChC,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,cAAc,CAAC,6BAA6B,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAC/D,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEhC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAEvD,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3B,IAAI;iBACD,gBAAgB,CAAC,WAAW,CAAC;iBAC7B,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CACb,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAC5D,CAAC;QACN,CAAC,EAAE,WAAW,CAAC,CAAC;QAEhB,MAAM,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,CAAC;QAEvD,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC;YAChE,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,cAAc,CAAC,8BAA8B,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAChE,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEhC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAEvD,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3B,IAAI;iBACD,gBAAgB,CAAC,WAAW,CAAC;iBAC7B,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CACb,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAC7D,CAAC;QACN,CAAC,EAAE,WAAW,CAAC,CAAC;QAEhB,MAAM,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC;QAExD,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { expect } from '@playwright/test';\nimport { regressionTest } from '@utils/test';\n\nregressionTest.describe('button: basic', () => {\n  regressionTest('should show loading spinner', async ({ page }) => {\n    await page.goto('button/loading');\n    expect(await page.screenshot({ animations: 'disabled' })).toMatchSnapshot();\n  });\n\n  regressionTest('should not have visual regressions', async ({ page }) => {\n    await page.goto('button/basic');\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot();\n  });\n\n  regressionTest('should have an hover effect', async ({ page }) => {\n    await page.goto('button/basic');\n\n    const bodyElement = await page.waitForSelector('body');\n\n    await page.evaluate((body) => {\n      body\n        .querySelectorAll('ix-button')\n        .forEach((b) =>\n          b.shadowRoot.querySelector('button').classList.add('hover')\n        );\n    }, bodyElement);\n\n    await page.waitForSelector('ix-button > button.hover');\n\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot({\n      maxDiffPixelRatio: 0.04,\n    });\n  });\n\n  regressionTest('should have an active effect', async ({ page }) => {\n    await page.goto('button/basic');\n\n    const bodyElement = await page.waitForSelector('body');\n\n    await page.evaluate((body) => {\n      body\n        .querySelectorAll('ix-button')\n        .forEach((b) =>\n          b.shadowRoot.querySelector('button').classList.add('active')\n        );\n    }, bodyElement);\n\n    await page.waitForSelector('ix-button > button.active');\n\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot();\n  });\n});\n"]}